name: Pylint and Pytest Workflow

permissions:
  contents: write

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run pylint and save score
        id: pylint
        run: |
          pylint **/*.py --fail-under=8 > pylint-report.txt || true
          score=$(grep -oP '(?<=Your code has been rated at )[^/]*' pylint-report.txt)
          echo "PYLINT_SCORE=$score" >> $GITHUB_ENV

      - name: Generate badge
        run: |
          mkdir -p .github/badges
          score=${{ env.PYLINT_SCORE }}
          color="green"
          if (( $(echo "$score < 8" | bc -l) )); then
            color="yellow"
          fi
          if (( $(echo "$score < 5" | bc -l) )); then
            color="red"
          fi
          echo '<svg xmlns="http://www.w3.org/2000/svg" width="160" height="40" role="img" aria-label="Pylint Results"><linearGradient id="a" x2="0" y2="100%"><stop offset="0" stop-color="#bbb" stop-opacity=".1"/><stop offset="1" stop-opacity=".1"/></linearGradient><rect rx="3" width="150" height="20" fill="#555"/><rect rx="3" x="90" width="60" height="20" fill="'$color'"/><path fill="'$color'" d="M90 0h4v20h-4z"/><rect rx="3" width="150" height="20" fill="url(#a)"/><g fill="#fff" text-anchor="middle" font-family="Verdana,DejaVu Sans,sans-serif" font-size="11"><text x="45" y="15" fill="#010101" fill-opacity=".3">Pylint</text><text x="45" y="14">Pylint</text><text x="120" y="15" fill="#010101" fill-opacity=".3">'$score'/10</text><text x="120" y="14">'$score'/10</text></g></svg>' > .github/badges/pylint.svg


      - name: List generated files for debugging
        run: ls -R .github/badges

      - name: Commit the lint badge
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add .github/badges/pylint.svg
          git commit -m "Update pylint results badge" || echo "No changes to commit"
          git push || echo "No changes to push"
    
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run pytest
        id: pytest
        run: |
          pytest > test-results.txt || true
          pass_count=$(grep -oP '(?<== )\d+(?= passed)' test-results.txt || echo "0")
          fail_count=$(grep -oP '(?<== )\d+(?= failed)' test-results.txt || echo "0")
          skip_count=$(grep -oP '(?<== )\d+(?= skipped)' test-results.txt || echo "0")
          total_count=$((pass_count + fail_count + skip_count))
          echo "PASS_COUNT=$pass_count" >> $GITHUB_ENV
          echo "TOTAL_COUNT=$total_count" >> $GITHUB_ENV

      - name: Generate test badge
        run: |
          mkdir -p .github/badges
          pass_count=${{ env.PASS_COUNT }}
          total_count=${{ env.TOTAL_COUNT }}
          color="green"
          if [ "$pass_count" -lt "$total_count" ]; then
            color="yellow"
          fi
          if [ "$pass_count" -eq "0" ]; then
            color="red"
          fi
          echo '<svg xmlns="http://www.w3.org/2000/svg" width="160" height="40" role="img" aria-label="Test Results"><linearGradient id="a" x2="0" y2="100%"><stop offset="0" stop-color="#bbb" stop-opacity=".1"/><stop offset="1" stop-opacity=".1"/></linearGradient><rect rx="3" width="150" height="20" fill="#555"/><rect rx="3" x="90" width="60" height="20" fill="'$color'"/><path fill="'$color'" d="M90 0h4v20h-4z"/><rect rx="3" width="150" height="20" fill="url(#a)"/><g fill="#fff" text-anchor="middle" font-family="Verdana,DejaVu Sans,sans-serif" font-size="11"><text x="45" y="15" fill="#010101" fill-opacity=".3">Tests</text><text x="45" y="14">Tests</text><text x="120" y="15" fill="#010101" fill-opacity=".3">'$pass_count'/'$total_count'</text><text x="120" y="14">'$pass_count'/'$total_count'</text></g></svg>' > .github/badges/test.svg

      - name: List generated files for debugging
        run: ls -R .github/badges

      - name: Commit test badge
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add .github/badges/test.svg
          git commit -m "Update test results badge" || echo "No changes to commit"
          git push || echo "No changes to push"